openapi: 3.0.0
info:
  description: |-
    An API detailing the various routes controlling emptystream, a net art piece by Holly Plank. 

    ![Image of cloud architecture](https://raw.githubusercontent.com/HollyGrahamPlank/emptystream/main/docs/images/cloud_design.svg)
  version: "1.0.0"
  contact:
    email: hollygrahamplank@gmail.com
    url: hollyplank.com
    name: Holly Plank
  license:
    name: BOBBO-NET Friendly MIT License
    url: https://github.com/HollyGrahamPlank/emptystream/blob/main/LICENSE.md
  title: "`emptystream` API"
tags:
  - name: Song Management API
    description: CRUD operations on emptystream songs.
  - name: Content Stream API
    description: The main radio. Commands what is playing.
  - name: Admin Panel API
    description: Exposes control to administrative functionality through the web.
paths:
  /transmission/{id}/{stemType}:
    get:
      tags:
        - Song Management API
      summary: Get the audio for a Transmission's stems
      description: Download the audio file for single stem of a Transmission using the type of stem.
      parameters:
        - in: path
          name: id
          description: The ID of the Transmission that owns the stem to get.
          required: true
          schema:
            type: string
            format: mongo-objectid
        - in: path
          name: stemType
          description: The name of the type of stem to get.
          required: true
          schema:
            $ref: "#/components/schemas/StemType"
      responses:
        "200":
          description: The audio file of the specific stem for the desired Transmission.
          content:
            audio/mpeg:
              schema:
                type: string
                format: binary
        "400":
          description: Malformed Transmission ID or stem type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "404":
          description: No transmission with the specified ID found, or no stem with the specified type found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
  /transmission/{id}:
    get:
      tags:
        - Song Management API
      summary: Get Transmission by ID
      description: Get a single Transmission using it's ID.
      parameters:
        - in: path
          name: id
          description: The ID of the Transmission to get.
          required: true
          schema:
            type: string
            format: mongo-objectid
      responses:
        "200":
          description: The transmission matching the specified ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transmission"

        "400":
          description: Missing input ID or malformed input ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "404":
          description: No transmission with the specified ID found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"

    patch:
      tags:
        - Song Management API
      summary: Update Transmission by ID
      description: Update a single Transmission using it's ID. Only name changes are permitted.
      parameters:
        - in: path
          name: id
          description: The ID of the Transmission to update.
          required: true
          schema:
            type: string
            format: mongo-objectid
      requestBody:
        description: Fields to update.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new name of the Transmission.
                  example: "whoisthere"
      responses:
        "200":
          description: The newly updated Transmission.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transmission"
        "400":
          description: Missing input ID or malformed request body.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "404":
          description: No transmission with the specified ID found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    delete:
      tags:
        - Song Management API
      summary: Delete Transmission by ID
      description: Delete a single Transmission by it's ID.
      parameters:
        - in: path
          name: id
          description: The ID of the Transmission to delete.
          required: true
          schema:
            type: string
            format: mongo-objectid
      responses:
        "200":
          description: The transmission has been removed
        "400":
          description: Missing input ID or malformed input ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "404":
          description: No transmission with the specified ID found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
  /transmission:
    get:
      description: Get a list of all Transmissions that exist.
      summary: Get all Transmissions
      tags:
        - Song Management API
      parameters:
        - in: query
          name: lastPageKey
          description: If paginating, the value of pageKey from the previous request.
          required: false
          schema:
            type: integer
            example: 1704829257257
        - in: query
          name: pageSize
          description: If paginating, the max number of entries per page.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 32
            default: 8
      responses:
        "200":
          description: A list of Transmissions (starting from the provided lastEvaluatedId, if there was one).
          content:
            application/json:
              schema:
                type: object
                properties:
                  pageKey:
                    type: string
                    example: fMW0PcHRJGUtUnadq4mvy
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transmission"
        "400":
          description: Malformed lastEvaluatedId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
    post:
      description: Create a new transmission in the DB using a new audio file.
      tags:
        - Song Management API
      summary: Create new Transmission
      requestBody:
        description: Data relating to the new Transmission.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - "name"
                - "audio"
              properties:
                name:
                  type: string
                  description: The name of the new Transmission.
                  example: "whoisthere"
                audio:
                  type: string
                  format: binary
                  description: The audio file of the Transmission. This will automatially be split into stems.
      responses:
        "202":
          description: The newly created Transmission, with an indication that audio is being split.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transmission"
        "400":
          description: Missing required params or malformed request body.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "404":
          description: No transmission with the specified ID found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "409":
          description: A Transmission with the specified ID already exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsError"
  /stream:
    get:
      description: Get the current state of the content stream.
      summary: Get stream state.
      tags:
        - Content Stream API
      responses:
        "200":
          description: The current state of the content stream.
          content:
            application/json:
              schema:
                type: object
                required:
                  - time
                properties:
                  time:
                    description: The current time.
                    type: string
                    format: date-time
                  tunings:
                    description: The current tuning values of the content stream.
                    type: array
                    items:
                      $ref: "#/components/schemas/TransmissionTuning"
  /stream/tune:
    post:
      description: Set one or multiple tunings for the content stream.
      summary: Set stream tuning.
      tags:
        - Content Stream API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tunings:
                  description: The new tuning values for the content stream
                  type: array
                  items:
                    $ref: "#/components/schemas/TransmissionTuning"
      responses:
        "200":
          description: The content stream has been tuned.
        "400":
          description: Missing required params or malformed request body.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "404":
          description: No transmission tuning with the specified ID found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"

components:
  schemas:
    Transmission:
      type: object
      required:
        - _id
        - name
        - stems
        - splitStatus
      properties:
        _id:
          type: string
          format: mongo-objectid
          example: fMW0PcHRJGUtUnadq4mvy
        name:
          type: string
          example: "loosestars"
        stems:
          type: array
          items:
            $ref: "#/components/schemas/StemType"
          example: ["drums", "bass", "vocals", "other"]
        splitOperation:
          type: object
          required:
            - status
            - percentage
          properties:
            status:
              type: string
              example: "complete"
            percentage:
              type: integer
              example: 100
      description: |
        A general transmission on emptystream. This is a looping sound consisting of four individual channels, split into:
        * Bass
        * Drums
        * Vocals
        * Everything Else
    TransmissionStem:
      type: object
      required:
        - id
        - stem
      properties:
        id:
          type: string
          format: mongo-objectid
          example: fMW0PcHRJGUtUnadq4mvy
        stem:
          $ref: "#/components/schemas/StemType"
    TransmissionTuning:
      type: object
      required:
        - index
        - transmission
      properties:
        startTime:
          type: string
          format: date-time
        index:
          type: integer
        transmission:
          $ref: "#/components/schemas/TransmissionStem"
    StemType:
      type: string
      enum: [source, drums, bass, vocals, other]
    NotFoundError:
      type: object
      properties:
        message:
          type: string
          example: "Item not found."
      description: A 404 error message.
    BadRequestError:
      type: object
      properties:
        message:
          type: string
          example: "Bad request."
      description: A 400 error message.
    AlreadyExistsError:
      type: object
      properties:
        message:
          type: string
          example: "Item already exists."
      description: A 409 error message.
    GenericError:
      type: object
      properties:
        message:
          type: string
          example: "Unknown error"
      description: An error message.
servers:
  - url: http://localhost:30330
    description: The local express deployment
